{"ast":null,"code":"import React from \"react\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'increment':\n      return {\n        counter: state.counter + 1\n      };\n    case 'increse':\n      return {};\n    case 'decrement':\n      return {\n        counter: state.counter - 1\n      };\n  }\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["React","createStore","initialState","counter","counterReducer","state","action","type","store"],"sources":["/Users/Zuo/Desktop/ReactJs/redux-practice1022/src/store/index.js"],"sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\"\n\nconst initialState = { counter: 0 };\n\nconst counterReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case 'increment':\n            return {\n                counter: state.counter + 1\n            };\n        case 'increse':\n            return {\n\n            };\n        case 'decrement':\n            return {\n                counter: state.counter - 1\n            };\n\n    }\n} \n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAE,CAAC;AAEnC,MAAMC,cAAc,GAAG,YAAiC;EAAA,IAAhCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAChD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACZ,OAAO;QACHJ,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;MAC7B,CAAC;IACL,KAAK,SAAS;MACV,OAAO,CAEP,CAAC;IACL,KAAK,WAAW;MACZ,OAAO;QACHA,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;MAC7B,CAAC;EAAC;AAGd,CAAC;AAED,MAAMK,KAAK,GAAGP,WAAW,CAACG,cAAc,CAAC;AAEzC,eAAeI,KAAK"},"metadata":{},"sourceType":"module"}